# -*- coding: utf-8 -*-
import numpy as np

# # -*- coding: utf-8 -*-
# import numpy as np
# 
# # Parameters of OCV fit function:
# # SOC range of data: array([3.39627574e-05, 9.49497207e-01])
# # E0: [0.4543285624883345, 0.12055509822567907, 0.08731537326408924]
# # a: [-17.32647996033224, -0.8459397342329221, -16.489329547867424]
# # Î”x: [0.041063414457503666, 0.6954447029903085, 0.26349188255218786]
# # Knots of interpolating spline:
# # [0.001      0.01103015 0.01604523 0.0210603  0.02607538 0.03109045
# #  0.03610553 0.0411206  0.04613568 0.05115075 0.05616583 0.0611809
# #  0.06619598 0.07121106 0.07622613 0.08124121 0.09628643 0.12637688
# #  0.19157286 0.25175377 0.37713065 0.50250754 0.56770352 0.62788442
# #  0.75326131 0.81845729 0.87863819 0.9388191  0.96890955 0.98395477
# #  0.99398492 0.999     ]
# # Coefficients of this spline:
# # [ 0.45963228  0.45831532  0.45256773  0.46066614  0.44415252  0.46724628
# #   0.43256882  0.4773392   0.32631412  0.22253442  0.26657198  0.21252042
# #   0.23664807  0.20835091  0.21689839  0.20579318  0.19987818  0.18597147
# #   0.16778842  0.15201563  0.13312081  0.11215118  0.09314232  0.08934212
# #   0.08749081  0.08515796  0.08242452  0.06462379  0.04208551  0.02025667
# #  -0.00173938 -0.03435714 -0.07813884]


def OCV_Curve_Fit(SOC):

    return (

          (SOC < 0.011030150753768845) * ((

              -24.996711819178472 * SOC

            + -0.21260698140445022) * SOC

            + 0.45986988833136094)

        + (SOC >= 0.011030150753768845) * (SOC < 0.016045226130653265) * ((

              237.17038165137274 * SOC

            + -5.99609210871958) * SOC

            + 0.4917662447495945)

        + (SOC >= 0.016045226130653265) * (SOC < 0.02106030150753769) * ((

              -489.2855420340675 * SOC

            + 17.316207030251405) * SOC

            + 0.30474068909448215)

        + (SOC >= 0.02106030150753769) * (SOC < 0.02607537688442211) * ((

              787.3920954346431 * SOC

            + -36.458224915792584) * SOC

            + 0.8709935641846092)

        + (SOC >= 0.02607537688442211) * (SOC < 0.031090452261306533) * ((

              -1148.488085916124 * SOC

            + 64.4993857478168) * SOC

            + -0.4452603095175762)

        + (SOC >= 0.031090452261306533) * (SOC < 0.03610552763819096) * ((

              1579.4180383387775 * SOC

            + -105.12428451112862) * SOC

            + 2.191578001769095)

        + (SOC >= 0.03610552763819096) * (SOC < 0.04112060301507538) * ((

              -3892.4018770860675 * SOC

            + 290.00160586402217) * SOC

            + -4.941536375983308)

        + (SOC >= 0.04112060301507538) * (SOC < 0.0461356783919598) * ((

              939.2353671106084 * SOC

            + -107.35806819890638) * SOC

            + 3.228298329687404)

        + (SOC >= 0.0461356783919598) * (SOC < 0.05115075376884422) * ((

              2938.598197225633 * SOC

            + -291.84198923695715) * SOC

            + 7.483943754437014)

        + (SOC >= 0.05115075376884422) * (SOC < 0.056165829145728645) * ((

              -1950.0060027347836 * SOC

            + 208.2695901740688) * SOC

            + -5.306598373263576)

        + (SOC >= 0.056165829145728645) * (SOC < 0.061180904522613065) * ((

              1554.198343901624 * SOC

            + -185.3634950757314) * SOC

            + 5.7477659328595845)

        + (SOC >= 0.061180904522613065) * (SOC < 0.06619597989949749) * ((

              -1042.202299970506 * SOC

            + 132.3367847146523) * SOC

            + -3.970829309471874)

        + (SOC >= 0.06619597989949749) * (SOC < 0.07121105527638191) * ((

              732.4692128393508 * SOC

            + -102.61545486569196) * SOC

            + 3.8056175548293183)

        + (SOC >= 0.07121105527638191) * (SOC < 0.07622613065326633) * ((

              -390.6940803851444 * SOC

            + 57.34783185073343) * SOC

            + -1.8899596714482279)

        + (SOC >= 0.07622613065326633) * (SOC < 0.08124120603015075) * ((

              161.97588564547664 * SOC

            + -26.907954226839365) * SOC

            + 1.3212866074731267)

        + (SOC >= 0.08124120603015075) * (SOC < 0.09628643216080401) * ((

              -0.8805727220993163 * SOC

            + -0.4466440516776018) * SOC

            + 0.24641223158910885)

        + (SOC >= 0.09628643216080401) * (SOC < 0.12637688442211056) * ((

              3.8977167212352697 * SOC

            + -1.3668129363382207) * SOC

            + 0.29071212103378696)

        + (SOC >= 0.12637688442211056) * (SOC < 0.19157286432160803) * ((

              0.9973339286872616 * SOC

            + -0.633730254430783) * SOC

            + 0.24438976835215342)

        + (SOC >= 0.19157286432160803) * (SOC < 0.2517537688442211) * ((

              0.3983965636626827 * SOC

            + -0.40424996129679336) * SOC

            + 0.22240866982163304)

        + (SOC >= 0.2517537688442211) * (SOC < 0.37713065326633166) * ((

              0.14516843290684767 * SOC

            + -0.2767476887064726) * SOC

            + 0.20635908099122505)

        + (SOC >= 0.37713065326633166) * (SOC < 0.5025075376884423) * ((

              -0.12856818459672814 * SOC

            + -0.07027874994239447) * SOC

            + 0.1674261981135734)

        + (SOC >= 0.5025075376884423) * (SOC < 0.5677035175879397) * ((

              1.0650287428696235 * SOC

            + -1.2698616559696116) * SOC

            + 0.4688259242940136)

        + (SOC >= 0.5677035175879397) * (SOC < 0.6278844221105527) * ((

              0.3378691463632313 * SOC

            + -0.44423953440059627) * SOC

            + 0.23447163298744034)

        + (SOC >= 0.6278844221105527) * (SOC < 0.7532613065326633) * ((

              -0.018059324379516628 * SOC

            + 0.0027243499294096196) * SOC

            + 0.09415080287902455)

        + (SOC >= 0.7532613065326633) * (SOC < 0.8184572864321608) * ((

              -0.14664395081119785 * SOC

            + 0.19643999734129736) * SOC

            + 0.021191552046375683)

        + (SOC >= 0.8184572864321608) * (SOC < 0.8786381909547738) * ((

              -2.0952110232044507 * SOC

            + 3.3860778343453752) * SOC

            + -1.2840996123414774)

        + (SOC >= 0.8786381909547738) * (SOC < 0.938819095477387) * ((

              -1.6912178270885265 * SOC

            + 2.6761501323587087) * SOC

            + -0.9722148164503555)

        + (SOC >= 0.938819095477387) * (SOC < 0.9689095477386934) * ((

              -7.775048321884251 * SOC

            + 14.09938261668244) * SOC

            + -6.334389210630707)

        + (SOC >= 0.9689095477386934) * (SOC < 0.9839547738693467) * ((

              -26.159114509418895 * SOC

            + 49.72437712740723) * SOC

            + -23.593087870420597)

        + (SOC >= 0.9839547738693467) * (SOC < 0.9939849246231156) * ((

              -128.69038561031232 * SOC

            + 251.49664446863972) * SOC

            + -122.86048071284452)

        + (SOC >= 0.9939849246231156) * ((

              -1308.462371176721 * SOC

            + 2596.8477807600193) * SOC

            + -1288.4823169235078)

    )



def derivative_OCV_Curve_Fit(SOC):

    return (

          (SOC < 0.011030150753768845) * (

              -49.993423638356944 * SOC

            + -0.21260698140445022)

        + (SOC >= 0.011030150753768845) * (SOC < 0.016045226130653265) * (

              474.3407633027455 * SOC

            + -5.99609210871958)

        + (SOC >= 0.016045226130653265) * (SOC < 0.02106030150753769) * (

              -978.571084068135 * SOC

            + 17.316207030251405)

        + (SOC >= 0.02106030150753769) * (SOC < 0.02607537688442211) * (

              1574.7841908692862 * SOC

            + -36.458224915792584)

        + (SOC >= 0.02607537688442211) * (SOC < 0.031090452261306533) * (

              -2296.976171832248 * SOC

            + 64.4993857478168)

        + (SOC >= 0.031090452261306533) * (SOC < 0.03610552763819096) * (

              3158.836076677555 * SOC

            + -105.12428451112862)

        + (SOC >= 0.03610552763819096) * (SOC < 0.04112060301507538) * (

              -7784.803754172135 * SOC

            + 290.00160586402217)

        + (SOC >= 0.04112060301507538) * (SOC < 0.0461356783919598) * (

              1878.4707342212168 * SOC

            + -107.35806819890638)

        + (SOC >= 0.0461356783919598) * (SOC < 0.05115075376884422) * (

              5877.196394451266 * SOC

            + -291.84198923695715)

        + (SOC >= 0.05115075376884422) * (SOC < 0.056165829145728645) * (

              -3900.012005469567 * SOC

            + 208.2695901740688)

        + (SOC >= 0.056165829145728645) * (SOC < 0.061180904522613065) * (

              3108.396687803248 * SOC

            + -185.3634950757314)

        + (SOC >= 0.061180904522613065) * (SOC < 0.06619597989949749) * (

              -2084.404599941012 * SOC

            + 132.3367847146523)

        + (SOC >= 0.06619597989949749) * (SOC < 0.07121105527638191) * (

              1464.9384256787016 * SOC

            + -102.61545486569196)

        + (SOC >= 0.07121105527638191) * (SOC < 0.07622613065326633) * (

              -781.3881607702888 * SOC

            + 57.34783185073343)

        + (SOC >= 0.07622613065326633) * (SOC < 0.08124120603015075) * (

              323.9517712909533 * SOC

            + -26.907954226839365)

        + (SOC >= 0.08124120603015075) * (SOC < 0.09628643216080401) * (

              -1.7611454441986325 * SOC

            + -0.4466440516776018)

        + (SOC >= 0.09628643216080401) * (SOC < 0.12637688442211056) * (

              7.795433442470539 * SOC

            + -1.3668129363382207)

        + (SOC >= 0.12637688442211056) * (SOC < 0.19157286432160803) * (

              1.9946678573745231 * SOC

            + -0.633730254430783)

        + (SOC >= 0.19157286432160803) * (SOC < 0.2517537688442211) * (

              0.7967931273253654 * SOC

            + -0.40424996129679336)

        + (SOC >= 0.2517537688442211) * (SOC < 0.37713065326633166) * (

              0.29033686581369533 * SOC

            + -0.2767476887064726)

        + (SOC >= 0.37713065326633166) * (SOC < 0.5025075376884423) * (

              -0.2571363691934563 * SOC

            + -0.07027874994239447)

        + (SOC >= 0.5025075376884423) * (SOC < 0.5677035175879397) * (

              2.130057485739247 * SOC

            + -1.2698616559696116)

        + (SOC >= 0.5677035175879397) * (SOC < 0.6278844221105527) * (

              0.6757382927264626 * SOC

            + -0.44423953440059627)

        + (SOC >= 0.6278844221105527) * (SOC < 0.7532613065326633) * (

              -0.036118648759033256 * SOC

            + 0.0027243499294096196)

        + (SOC >= 0.7532613065326633) * (SOC < 0.8184572864321608) * (

              -0.2932879016223957 * SOC

            + 0.19643999734129736)

        + (SOC >= 0.8184572864321608) * (SOC < 0.8786381909547738) * (

              -4.1904220464089015 * SOC

            + 3.3860778343453752)

        + (SOC >= 0.8786381909547738) * (SOC < 0.938819095477387) * (

              -3.382435654177053 * SOC

            + 2.6761501323587087)

        + (SOC >= 0.938819095477387) * (SOC < 0.9689095477386934) * (

              -15.550096643768502 * SOC

            + 14.09938261668244)

        + (SOC >= 0.9689095477386934) * (SOC < 0.9839547738693467) * (

              -52.31822901883779 * SOC

            + 49.72437712740723)

        + (SOC >= 0.9839547738693467) * (SOC < 0.9939849246231156) * (

              -257.38077122062464 * SOC

            + 251.49664446863972)

        + (SOC >= 0.9939849246231156) * (

              -2616.924742353442 * SOC

            + 2596.8477807600193)

    )


